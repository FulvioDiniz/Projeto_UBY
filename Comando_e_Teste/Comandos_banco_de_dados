-- Tabela Receita
CREATE TABLE receita (
    id INTEGER PRIMARY KEY,
    observacao TEXT
);

-- Tabela Produto
CREATE TABLE produto (
    id INTEGER PRIMARY KEY,
    receita_id INTEGER NOT NULL,
    numero_produto INTEGER NOT NULL,
    qtd_produto INTEGER NOT NULL,
    observacao TEXT,
    FOREIGN KEY (receita_id) REFERENCES receita(id)
);

-- Tabela Lote
CREATE TABLE lote (
    id INTEGER PRIMARY KEY,
    produto_id INTEGER NOT NULL,
    numero_lote INTEGER NOT NULL,
    identificacao_lote VARCHAR(255),
    qtd_produto_cada_lote INTEGER NOT NULL,
    FOREIGN KEY (produto_id) REFERENCES produto(id)
);


ALTER TABLE receita
ADD status BIT NOT NULL
    CONSTRAINT DF_receita_status DEFAULT (0);

-- Inserindo a receita
INSERT INTO receita (id, observacao,realizada)
VALUES (020020111, 'POTENTSMART',0);

-- Inserindo 10 produtos para a receita (id = 1)
INSERT INTO produto (id, receita_id, numero_produto, qtd_produto, observacao) VALUES 
(030060006, 020020111, 1, 2975, 'AGUA'),
(030060036, 020020111, 2, 500, 'POLIGLICOL'),
(030060035,020020111 , 3,500, 'SURFACTANTE NAO IONICO'),
(030060037, 020020111, 4, 250, 'DLIMONENO'),
(030060018, 020020111, 5, 150, 'GLICERINA'),
(030060033, 020020111, 6, 100, 'POLIMERO ACRILICO'),
(030060017, 020020111, 7, 500, 'ANTIESPUMANTE AFE-1430 OU SE4230 ADTIVO'),
(030060021, 020020111, 8, 25, 'CONSERVANTE');

-- Inserindo 4 lotes para cada produto
-- Para o Produto 1 (id = 030060006):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(10, 030060006, 10, 'Lote 1 do AGUA', 2975);

-- Para o Produto 2 (id = 030060036):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(50, 030060036, 100, 'Lote 1 do POLIGLICOL', 200),
(60, 030060036, 200, 'Lote 2 do POLIGLICOL', 100),
(70, 030060036, 300, 'Lote 3 do POLIGLICOL', 200);


-- Para o Produto 3 (id = 030060035):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(90, 030060035, 101, 'Lote 1 do SURFACTANTE NAO IONICO', 200),
(100, 030060035, 201, 'Lote 2 do SURFACTANTE NAO IONICO', 300);

-- Para o Produto 4 (id = 030060037):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(130, 030060037, 110, 'Lote 1 do DLIMONENO', 100),
(140, 030060037, 210, 'Lote 2 do DLIMONENO', 50),
(150, 030060037, 310, 'Lote 3 do DLIMONENO', 50),
(160, 030060037, 410, 'Lote 4 do DLIMONENO', 50);

-- Para o Produto 5 (id = 5):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(170, 030060018, 111, 'Lote 1 do GLICERINA', 50),
(180, 030060018, 211, 'Lote 2 do GLICERINA', 100);

-- Para o Produto 6 (id = 6):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(210, 030060033, 112, 'Lote 1 do POLIMERO ACRILICO', 100);

-- Para o Produto 7 (id = 7):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(250, 030060017, 121, 'Lote 1 do ANTIESPUMANTE AFE-1430 OU SE4230 ADTIVO7', 250),
(260, 030060017, 221, 'Lote 2 do ANTIESPUMANTE AFE-1430 OU SE4230 ADTIVO', 250);


-- Para o Produto 8 (id = 8):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(290, 030060021, 122, 'Lote 1 do CONSERVANTE', 25);



SELECT 
    r.id AS receita_id,
    r.observacao AS receita_observacao,
	r.realizada AS receita_realizada,
    p.id AS produto_id,
    p.numero_produto,
    p.qtd_produto,
    p.observacao AS produto_observacao,
    l.id AS lote_id,
    l.numero_lote,
    l.identificacao_lote,
    l.qtd_produto_cada_lote
FROM receita r
JOIN produto p ON r.id = p.receita_id
JOIN lote l ON p.id = l.produto_id
WHERE r.id = 020020111
ORDER BY p.numero_produto, l.numero_lote;












-- Inserção da receita POTENTSMART

-- Inserindo a receita
INSERT INTO receita (id, observacao)
VALUES (020020111, 'POTENTSMART');

-- Inserindo 10 produtos para a receita (id = 1)
INSERT INTO produto (id, receita_id, numero_produto, qtd_produto, observacao) VALUES 
(030060006, 020020111, 1, 2975, 'AGUA'),
(030060036, 020020111, 2, 500, 'POLIGLICOL'),
(030060035,020020111 , 3,500, 'SURFACTANTE NAO IONICO'),
(030060037, 020020111, 4, 250, 'DLIMONENO'),
(030060018, 020020111, 5, 150, 'GLICERINA'),
(030060033, 020020111, 6, 100, 'POLIMERO ACRILICO'),
(030060017, 020020111, 7, 500, 'ANTIESPUMANTE AFE-1430 OU SE4230 ADTIVO'),
(030060021, 020020111, 8, 25, 'CONSERVANTE');

-- Inserindo 4 lotes para cada produto
-- Para o Produto 1 (id = 030060006):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(10, 030060006, 10, 'Lote 1 do AGUA', 2975);

-- Para o Produto 2 (id = 030060036):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(50, 030060036, 100, 'Lote 1 do POLIGLICOL', 200),
(60, 030060036, 200, 'Lote 2 do POLIGLICOL', 100),
(70, 030060036, 300, 'Lote 3 do POLIGLICOL', 200);


-- Para o Produto 3 (id = 030060035):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(90, 030060035, 101, 'Lote 1 do SURFACTANTE NAO IONICO', 200),
(100, 030060035, 201, 'Lote 2 do SURFACTANTE NAO IONICO', 300);

-- Para o Produto 4 (id = 030060037):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(130, 030060037, 110, 'Lote 1 do DLIMONENO', 100),
(140, 030060037, 210, 'Lote 2 do DLIMONENO', 50),
(150, 030060037, 310, 'Lote 3 do DLIMONENO', 50),
(160, 030060037, 410, 'Lote 4 do DLIMONENO', 50);

-- Para o Produto 5 (id = 5):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(170, 030060018, 111, 'Lote 1 do GLICERINA', 50),
(180, 030060018, 211, 'Lote 2 do GLICERINA', 100);

-- Para o Produto 6 (id = 6):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(210, 030060033, 112, 'Lote 1 do POLIMERO ACRILICO', 100);

-- Para o Produto 7 (id = 7):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(250, 030060017, 121, 'Lote 1 do ANTIESPUMANTE AFE-1430 OU SE4230 ADTIVO7', 250),
(260, 030060017, 221, 'Lote 2 do ANTIESPUMANTE AFE-1430 OU SE4230 ADTIVO', 250);


-- Para o Produto 8 (id = 8):
INSERT INTO lote (id, produto_id, numero_lote, identificacao_lote, qtd_produto_cada_lote) VALUES 
(290, 030060021, 122, 'Lote 1 do CONSERVANTE', 25);







-- Tabela Receita Recebida
CREATE TABLE receita_recebida (
    id INTEGER PRIMARY KEY,
    -- Caso queira relacionar com a tabela de "receita" original:
    receita_original_id INTEGER,       -- ou NOT NULL, se fizer sentido
    observacao TEXT,
    FOREIGN KEY (receita_original_id) REFERENCES receita(id)
);

-- Tabela Produto Recebido
CREATE TABLE produto_recebido (
    id INTEGER PRIMARY KEY,
    receita_recebida_id INTEGER NOT NULL,
    -- Caso queira relacionar com a tabela de "produto" original:
    produto_original_id INTEGER,
    numero_produto INTEGER NOT NULL,
    qtd_produto INTEGER NOT NULL,
    observacao TEXT,
    FOREIGN KEY (receita_recebida_id) REFERENCES receita_recebida(id),
    FOREIGN KEY (produto_original_id) REFERENCES produto(id)
);

-- Tabela Lote Recebido
CREATE TABLE lote_recebido (
    id INTEGER PRIMARY KEY,
    produto_recebido_id INTEGER NOT NULL,
    -- Caso queira relacionar com a tabela de "lote" original:
    lote_original_id INTEGER,
    numero_lote INTEGER NOT NULL,
    identificacao_lote VARCHAR(255),
    qtd_produto_cada_lote INTEGER NOT NULL,
    peso DECIMAL(10,2), -- Coluna para receber o peso de cada lote
    FOREIGN KEY (produto_recebido_id) REFERENCES produto_recebido(id),
    FOREIGN KEY (lote_original_id) REFERENCES lote(id)
);





-- 1) Deleta todos os registros de lote
DELETE FROM lote;

-- 2) Deleta todos os registros de produto
DELETE FROM produto;

-- 3) Deleta todos os registros de receita
DELETE FROM receita;





SELECT 
    r.id AS receita_id,
    r.observacao AS receita_observacao,
	r.realizada AS receita_realizada,
    p.id AS produto_id,
    p.numero_produto,
    p.qtd_produto,
    p.observacao AS produto_observacao,
    l.id AS lote_id,
    l.numero_lote,
    l.identificacao_lote,
    l.qtd_produto_cada_lote
FROM receita r
JOIN produto p ON r.id = p.receita_id
JOIN lote l ON p.id = l.produto_id
WHERE r.id = 020020111
ORDER BY p.numero_produto, l.numero_lote;




SELECT * FROM lote_enviado

DELETE from lote_enviado


    SELECT 
        l.qtd_produto_cada_lote
    FROM receita r
    JOIN produto p ON r.id = p.receita_id
    JOIN lote l ON p.id = l.produto_id
    WHERE r.id = 20020111
    ORDER BY p.numero_produto, l.numero_lote;
    



SELECT * from lote_salvo

DELETE from lote_salvo



CREATE TABLE lote_salvo (
    id INT IDENTITY(1,1) PRIMARY KEY,  -- Autoincremento
    produto_id INT NOT NULL,
    numero_lote INT NOT NULL,
    identificacao_lote VARCHAR(255),
    qtd_produto_cada_lote INT NOT NULL,
    peso_real DECIMAL(10,2),
    erro_percentual AS (
        CASE 
            WHEN qtd_produto_cada_lote = 0 THEN 0
            ELSE CAST(
                ((ABS(peso_real - qtd_produto_cada_lote) / qtd_produto_cada_lote) * 100.0)
                AS DECIMAL(5,2)
            )
        END
    ) PERSISTED,  -- Computado e armazenado fisicamente
    FOREIGN KEY (produto_id) REFERENCES produto(id)
);


ALTER TABLE lote_salvo
ALTER COLUMN peso_real DECIMAL(12,2) NULL; -- ou NOT NULL, conforme o caso




-- 1) Remover a coluna computada (erro_percentual)
ALTER TABLE lote_salvo
DROP COLUMN erro_percentual;
GO

-- 2) Alterar o tipo de peso_real
ALTER TABLE lote_salvo
ALTER COLUMN peso_real DECIMAL(12,2) NULL;  -- Exemplo de NOVO tipo
GO

-- 3) Recriar a coluna computada erro_percentual
ALTER TABLE lote_salvo
ADD erro_percentual AS (
    CASE 
       WHEN qtd_produto_cada_lote = 0 THEN 0
       ELSE CAST(
          (ABS(peso_real - qtd_produto_cada_lote) / qtd_produto_cada_lote * 100.0)
          AS DECIMAL(7,2)
       )
    END
) PERSISTED;  -- Se quiser armazenar, senão omita PERSISTED
GO



CREATE TABLE lote_salvo (
    id INT IDENTITY(1,1) PRIMARY KEY,
    produto_id INT NOT NULL,
    numero_lote FLOAT NOT NULL,
    identificacao_lote VARCHAR(255),
    qtd_produto_cada_lote FLOAT NOT NULL,
    peso_real FLOAT,
    data_insercao DATETIME NOT NULL 
        CONSTRAINT DF_lote_salvo_data_insercao DEFAULT (GETDATE()),
    
    -- Coluna computada que mostra a % de erro entre peso_real e qtd_produto_cada_lote
    erro_percentual AS (
        CASE 
            WHEN qtd_produto_cada_lote = 0 THEN 0
            ELSE ((ABS(peso_real - qtd_produto_cada_lote) / qtd_produto_cada_lote) * 100.0)
        END
    ) PERSISTED,
    
    FOREIGN KEY (produto_id) REFERENCES produto(id)
);
